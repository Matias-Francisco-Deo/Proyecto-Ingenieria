name: CI

on:
    push:
        branches: [main, dev]
    pull_request:
        branches: [main, dev]

jobs:
    backend-tests:
        name: Backend - Tests (Docker + Postgres)
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: root
                    POSTGRES_DB: reservo
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U postgres"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Backend Docker image (development target)
              run: docker build -t reservo-backend:latest --target development ./server

            - name: Wait for Postgres to be ready
              run: |
                  for i in {1..10}; do
                    nc -z localhost 5432 && echo "‚úÖ Postgres is up" && break
                    echo "‚è≥ Waiting for Postgres..."
                    sleep 5
                  done

            - name: Run Backend Tests inside Docker
              run: |
                  docker run --rm \
                    --add-host=host.docker.internal:host-gateway \
                    -e TZ=America/Argentina/Buenos_Aires \
                    -e DB_HOST=host.docker.internal \
                    -e DB_PORT=5432 \
                    -e DB_NAME=reservo \
                    -e DB_USER=postgres \
                    -e DB_PASSWORD=root \
                    -e SPRING_MAIL_USERNAME=reservoapptmmj@gmail.com \
                    -e "SPRING_MAIL_PASSWORD=bmfj mmkz sgaw jnbv" \
                    reservo-backend:latest test

            - name: Publish Test Results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: backend-test-results
                  path: server/target/surefire-reports/

            - name: Stop Backend Container
              if: always()
              run: docker rm -f reservo-test || true

    frontend:
        name: Frontend - React (Docker)
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Frontend Docker image
              run: docker build -t reservo-frontend:latest ./client

            - name: Run Frontend Build inside Docker
              run: |
                  docker run --rm \
                    -v ${PWD}/client/dist:/app/dist \
                    reservo-frontend:latest \
                    sh -c "npm run nottscbuild"

            - name: Verify Build Output
              run: |
                  echo "üìÅ Contenido del directorio dist:"
                  ls -la ./client/dist/

                  if [ -f "./client/dist/index.html" ]; then
                      echo "‚úÖ Build exitoso - index.html encontrado"
                  else
                      echo "‚ùå Build fallido - no se encontr√≥ index.html"
                      exit 1
                  fi

            - name: Smoke Test - Start Frontend Dev Server
              run: |
                  echo "üöÄ Starting frontend container for smoke test..."
                  docker run -d --name reservo-frontend-test \
                    -p 5173:5173 \
                    reservo-frontend:latest

                  echo "‚è≥ Waiting for frontend to start (max 30s)..."
                  for i in {1..6}; do
                    if curl -fs http://localhost:5173 > /dev/null; then
                      echo "‚úÖ Frontend dev server is running!"
                      break
                    fi
                    echo "Waiting... ($i/6)"
                    sleep 5
                  done

                  if ! curl -fs http://localhost:5173 > /dev/null; then
                    echo "‚ùå Frontend failed to start. Showing logs:"
                    docker logs reservo-frontend-test
                    exit 1
                  fi

                  echo "‚úÖ Frontend smoke test passed!"

            - name: Stop Frontend Container
              if: always()
              run: docker rm -f reservo-frontend-test || true

            - name: Upload Build Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-build
                  path: client/dist/
