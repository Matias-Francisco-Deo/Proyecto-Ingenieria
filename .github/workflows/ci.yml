name: CI

on:
    push:
        branches: [main, dev, feature/imagenDocker]
    pull_request:
        branches: [main, dev, feature/imagenDocker]

jobs:
    backend-tests:
        name: Backend - Tests (Docker + Postgres)
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: root
                    POSTGRES_DB: reservo
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U postgres"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Backend Docker image (development target)
              run: docker build -t reservo-backend:latest --target development ./server

            - name: Wait for Postgres to be ready
              run: |
                  for i in {1..10}; do
                    nc -z localhost 5432 && echo "✅ Postgres is up" && break
                    echo "⏳ Waiting for Postgres..."
                    sleep 5
                  done

            - name: Run Backend Tests inside Docker
              run: |
                  docker run --rm \
                    --add-host=host.docker.internal:host-gateway \
                    -e DB_HOST=host.docker.internal \
                    -e DB_PORT=5432 \
                    -e DB_NAME=reservo \
                    -e DB_USER=postgres \
                    -e DB_PASSWORD=root \
                    -e SPRING_MAIL_USERNAME=reservoapptmmj@gmail.com \
                    -e "SPRING_MAIL_PASSWORD=bmfj mmkz sgaw jnbv" \
                    reservo-backend:latest test

            - name: Publish Test Results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: backend-test-results
                  path: server/target/surefire-reports/

            - name: Stop Backend Container
              if: always()
              run: docker rm -f reservo-test || true

    frontend:
        name: Frontend - React
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: npm

            - name: Install dependencies
              run: npm install
              working-directory: client

            - name: Build frontend
              run: npm run nottscbuild
              working-directory: client
